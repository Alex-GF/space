services:
  mongodb:
      image: mongo:7.0.16
      env_file:
        - ../../.env
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: 4dm1n
        MONGO_INITDB_DATABASE: space_db
        DATABASE_NAME: space_db
        DATABASE_USERNAME: mongoUser
        DATABASE_PASSWORD: mongoPassword
      volumes:
        - 'space-mongodb:/data/db'
        - '../../src/main/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh'
      networks:
        - space-network
      # healthcheck:
      #   test: [ "CMD", "mongo", "--username", "${MONGO_INITDB_ROOT_USERNAME:-root}", "--password", "${MONGO_INITDB_ROOT_PASSWORD:-4dm1n}", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')" ]
      #   interval: 5s
      #   timeout: 5s
      #   retries: 3
      #   start_period: 5s
  redis:
    image: redis:7.4.2
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: always
    volumes:
      - 'redis_data:/data'
    networks:
      - space-network
  server:
    restart: always
    container_name: space-server
    build:
        context: ../../
        dockerfile: ./docker/production/Dockerfile
    ports:
      - 5403:3000
    env_file:
      - ../../.env
    environment:
      ENVIRONMENT: production
      MONGO_URI: mongodb://mongoUser:mongoPassword@mongodb:27017/space_db
      REDIS_URL: redis://redis:6379
    volumes:
      - 'space-statics:/usr/src/server/public'
    depends_on:
      - mongodb
      - redis
    links:
      - mongodb
      - redis
    networks:
      - space-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/healthcheck"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
volumes:
  space-mongodb:
    driver: local
  space-statics:
    driver: local
  redis_data:
    driver: local
networks:
  space-network:
    driver: bridge