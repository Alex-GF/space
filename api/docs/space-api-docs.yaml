openapi: 3.0.4
info:
  title: SPACE API
  description: |-
    SPACE (Subscription and Pricing Access Control Engine) is the reference implementation of **ASTRA**, the architecture presented in the ICSOC ’25 paper *“iSubscription: Bridging the Gap Between Contracts and Runtime Access Control in SaaS.”* The API lets you:
  
    * Manage pricing/s of your SaaS (_iPricings_).
    * Store and novate contracts (_iSubscriptions_).
    * Enforce subscription compliance at run time through pricing-driven self-adaptation.
  
    ---
    ### Authentication & roles
  
    Every request must include an API key in the `x-api-key` header, except **/users/authentication**, which is used to obtain the API Key through the user credentials.
    Each key is bound to **one role**, which determines the operations you can perform:
  
    | Role | Effective permissions | Practical scope in this API |
    | ---- | -------------------- | --------------------------- |
    | **ADMIN** | `allowAll = true` | Unrestricted access to every tag and HTTP verb |
    | **MANAGER** | Blocks **DELETE** on any resource | Full read/write except destructive operations |
    | **EVALUATOR** | `GET` on `services`, `features`  <br>`POST` on `features` | Read-only configuration plus feature evaluation |
  
    *(These rules cannot be declared natively in OAS 3.0; but SPACE enforces them at run time.)*
  
    ---
    ### Example data
  
    [Zoom](https://www.zoom.com/) is used throughout the specification as a running example; replace it with your own services and pricings when integrating SPACE into your product.
  
    ---
    See the external documentation links for full details on iPricing, iSubscription, and ASTRA’s optimistic-update algorithm.
  contact:
    email: agarcia29@us.es
  version: 1.0.0
externalDocs:
  description: Find out more about Pricing-driven Solutions
  url: https://sphere.score.us.es/
servers: []
tags:
  - name: authentication
    description: Endpoint to get API Key (required to perform other requests) from user credentials.
  - name: users
    description: Operations about users. Mainly to get credentials, API keys, etc.
  - name: services
    description: Configure the services that your SaaS is going to be offering.
  - name: contracts
    description: >-
      Everything about your users contracts. In this version this will store
      users' iSubscriptions.
  - name: features
    description: Endpoints to perform evaluations once system is configured.
  - name: analytics
    description: Endpoints to retrieve information about the usage of SPACE.
paths:
  /users/authenticate:
    post:
      summary: Authenticate user and obtain API Key
      tags: 
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: User credentials
              properties:
                username:
                  type: string
                  description: Username of the user
                  example: jdoe
                password:
                  type: string
                  description: Password of the user
                  example: j0hnD03
              required:
                - username
                - password
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: jdoe
                  apiKey:
                    $ref: '#/components/schemas/ApiKey'
                  role:
                    type: string
                    enum: 
                      - ADMIN
                      - MANAGER
                      - EVALUATOR
                    example: ADMIN
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Invalid credentials
        '422':
          description: Request sent could not be processed properly
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldValidationError'
  /users:
    get:
      summary: Get all users
      tags: 
        - users
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Operation Completed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new user
      tags:
        - users
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '404':
          description: User already exists or not found
        '422':
          description: Validation error
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{username}:
    parameters:
      - $ref: '#/components/parameters/Username'
    get:
      summary: Get user by username
      tags:
        - users
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Operation Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user
      tags:
        - users
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Operation Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '422':
          description: Validation error
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete user
      tags:
        - users
      security:
        - ApiKeyAuth: []
      responses:
        '204':
          description: User deleted
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{username}/api-key:
    put:
      summary: Regenerate user's API Key
      tags:
        - users
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: API Key regenerated
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKey:
                    $ref: '#/components/schemas/ApiKey'
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{username}/role:
    put:
      summary: Change user's role
      tags:
        - users
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: New role of the user
                  enum: 
                    - ADMIN
                    - MANAGER
                    - EVALUATOR
      responses:
        '200':
          description: Role updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid role
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services:
    get:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Retrieves all services operated by Pricing4SaaS
      description: Retrieves all services operated by Pricing4SaaS
      operationId: getServices
      parameters:
        - name: name
          in: query
          description: Name to be considered for filter
          required: false
          schema:
            type: string
            example: Zoom
        - name: page
          in: query
          description: >-
            Page number to retrieve, starting from 1. Cannot be used with
            `offset`. Use either `page` or `offset`, not both.
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: offset
          in: query
          description: |-
            Number of items to skip before starting to collect the result set.
            Cannot be used with `page`. Use either `page` or `offset`, not both.
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: >-
            Maximum number of items to return. Useful to control pagination
            size.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 20
            default: 20
        - name: order
          in: query
          description: >-
            Sort the list of services by name. Use 'asc' for ascending or 'desc'
            for descending.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Adds a new service to the configuration
      description: >-
        Adds a new service to the configuration and stablishes the uploaded
        pricing as the latest version
      operationId: addService
      requestBody:
        description: Create a service to be managed by Pricing4SaaS
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pricing:
                  type: string
                  format: binary
                  description: >
                    The pricing configuration file in YAML format (.yaml or
                    .yml)
        required: true
      responses:
        '200':
          description: Service created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: There is already a service created with this name
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '415':
          description: >-
            File format not allowed. Please provide the pricing in .yaml or .yml
            formats
        '422':
          description: >-
            Errors were found in your pricing specification. Please, fix it and
            submit again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Deletes all services from the configuration
      description: |-
        Deletes all services from the configuration. 

        **WARNING:** This operation is extremelly destructive.
      operationId: deleteServices
      responses:
        '204':
          description: Services deleted
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{serviceName}:
    parameters:
    - $ref: '#/components/parameters/ServiceName'
    get:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Retrieves a service from the configuration
      description: Retrieves a service's information from the configuration by name
      operationId: getServiceByName
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Updates a service from the configuration
      description: >-
        Updates a service information from the configuration. 


        **DISCLAIMER**: this endpoint cannot be used to change the pricing of a
        service.
      operationId: updateServiceByName
      requestBody:
        description: Update a service managed by Pricing4SaaS
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the service
        required: true
      responses:
        '200':
          description: Service updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service not found
        '422':
          description: Validation error
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Disables a service from the configuration
      description: >-
        Disables a service in the configuration, novating all affected contract subscriptions to remove the service. 
        
        
        All contracts whose only service was the one disabled will also be deactivated.


        **WARNING:** This operation disables the service, but do not remove it from the database, so that pricing information can be accessed with support purposes.
      operationId: deleteServiceByName
      responses:
        '204':
          description: Service deleted
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{serviceName}/pricings:
    parameters:
    - $ref: '#/components/parameters/ServiceName'
    get:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Retrieves pricings of a service from the configuration
      description: >-
        Retrieves either active or archived pricings of a service from the
        configuration
      operationId: getServicePricingsByName
      parameters:
        - name: pricingStatus
          in: query
          description: Pricing status to be considered for filter
          required: false
          schema:
            type: string
            enum:
              - active
              - archived
            default: active
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pricing'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Adds pricing to service
      description: >-
        Adds a new **active** pricing to the service.


        **IMPORTANT:** both the service's name and the pricing's must be the
        same.
      operationId: addPricingToServiceByName
      requestBody:
        description: Adds a pricing to an existent service
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pricing:
                  type: string
                  format: binary
                  description: >-
                    The pricing configuration file in YAML format (.yaml or
                    .yml)
        required: true
      responses:
        '200':
          description: Pricing added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: The service already have a pricing with this version
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service not found
        '415':
          description: >-
            File format not allowed. Please provide the pricing in .yaml or .yml
            formats
        '422':
          description: >-
            Validation error. Maybe the pricing `saasName` does not match with
            the service's
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{serviceName}/pricings/{pricingVersion}:
    parameters:
    - $ref: '#/components/parameters/ServiceName'
    - $ref: '#/components/parameters/PricingVersion'
    get:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Retrieves a pricing from the configuration
      description: Retrieves a pricing configuration
      operationId: getServicePricingByVersion
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricing'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service or pricing not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Changes a pricing's availavility for a service
      description: >-
        Changes a pricing's availavility for a service.


        **WARNING:** This is a potentially destructive action. All users
        subscribed to a pricing that is going to be archived will suffer
        novations to the most recent version of the pricing.
      operationId: updatePricingAvailabilityByVersion
      parameters:
        - name: availability
          in: query
          description: >-
            Use this query param to change wether a pricing is active or
            archived for a service.


            **IMPORTANT:** If the pricing is the only active pricing of the
            service, it cannot be archived.
          required: true
          schema:
            type: string
            enum:
              - active
              - archived
            example: archived
      requestBody:
        description: >-
          If `availability = "archived"`, the request body must include a fallback subscription. This subscription will be used to novate all contracts currently subscribed to the pricing version being archived. The fallback subscription must be valid in the latest version of the pricing, as this is the version to which all contracts will be migrated.
          
          
          **IMPORTANT:** If `availability = "archived"`, the request body is **required**
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionPlan:
                  type: string
                  description: >-
                    The plan selected fo the new subscription
                subscriptionAddOns:
                  type: object
                  description: >-
                    The set of add-ons to be included in the new subscription
                  additionalProperties:
                    type: number
                    description: Indicates how many times the add-on is contracted
              example:
                subscriptionPlan: "PRO"
                additionalAddOns:
                  largeMeetings: 1
                  zoomWhiteboard: 1
      responses:
        '200':
          description: Service updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: >-
            Pricing cannot be archived because is the last active one of the
            service
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service or pricing not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - services
      security:
        - ApiKeyAuth: []
      summary: Deletes a pricing version from a service
      description: >-
        Deletes a pricing version from a service.


        **WARNING:** This is a potentially destructive action. All users
        subscribed to a pricing that is going to be deleted will suffer
        novations in their contracts towards the latests pricing version of the
        service. If the removed pricing is the **last active pricing of the
        service, the service will be deleted**.
      operationId: deletePricingByVersionAndService
      responses:
        '204':
          description: Pricing deleted
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Service or pricing not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contracts:
    get:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Retrieves all the contracts of the SaaS
      description: >-
        Retrieves all SaaS contracts, with pagination set to 20 per page by
        default.
      operationId: getContracts
      parameters:
        - name: username
          in: query
          description: The username of the user for filter
          required: false
          schema:
            type: string
            example: testUser
        - name: firstName
          in: query
          description: The first name of the user for filter
          required: false
          schema:
            type: string
            example: John
        - name: lastName
          in: query
          description: The last name of the user for filter
          required: false
          schema:
            type: string
            example: Doe
        - name: email
          in: query
          description: The email of the user for filter
          required: false
          schema:
            type: string
            example: test@user.com
        - name: serviceName
          in: query
          description: The name of the service for filter. All returned contracts will beinclude this service in their subscriptions.
          required: false
          schema:
            type: string
            example: Zoom
        - name: page
          in: query
          description: >-
            Page number to retrieve, starting from 1. Cannot be used together with `offset` —use either `page` or `offset`, not both. If `offset` is specified, this parameter will be ignored.
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: offset
          in: query
          description: |-
            Number of items to skip before starting to collect the result set.
            Cannot be used with `page`. Use either `page` or `offset`, not both.
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: >-
            Maximum number of items to return. Useful to control pagination
            size.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 20
            default: 20
        - name: sort
          in: query
          description: Field name to sort the results by.
          required: false
          schema:
            type: string
            enum:
              - firstName
              - lastName
              - username
              - email
            example: lastName
            default: username
        - name: order
          in: query
          description: Sort direction. Use 'asc' for ascending or 'desc' for descending.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Stores a new contract within the system
      description: >-
        Stores a new contract within the system in order to use it in
        evaluations..
      operationId: addContracts
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionCreation'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Deletes all contracts from the configuration
      description: |-
        Deletes all contracts from the configuration. 

        **WARNING:** This operation is extremelly destructive.
      operationId: deleteContracts
      responses:
        '204':
          description: Contracts deleted
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contracts/{userId}:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Retrieves a contract from the configuration
      description: Retrieves the contract of the given userId
      operationId: getContractByUserId
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Updates a contract from the configuration
      description: >-
        Performs a novation over the composition of a user's contract, i.e.
        allows you to change the active plan/add-ons within the contract,
        storing the actual values in the `history`.
      operationId: updateContractByUserId
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionCompositionNovation'
      responses:
        '200':
          description: Contract updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid novation
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        '422':
          description: Validation error
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Deletes a contract from the configuration
      description: |-
        Deletes a contract from the configuration. 

        **WARNING:** This operation also removes all user history.
      operationId: deleteContractByUserId
      responses:
        '204':
          description: Contract deleted
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contracts/{userId}/usageLevels:
    put:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Updates the usageLevel of a contract
      description: >-
        Performs a novation to either add consumption to some or all usageLevels of a user’s contract, or to reset them.
      operationId: updateContractUsageLevelByUserId
      requestBody:
        description: Updates the value of the the usage levels tracked by a contract
        content:
          application/json:
            schema:
              type: object
              description: >- 
                  Map containing service names as keys and the increment to be applied to a subset of such service's trackable usage limits as values.
              additionalProperties:
                type: object
                description: >- 
                  Map containing trackable usage limit names as keys and the increment to be applied to such limits as values.
                additionalProperties:
                  type: number
                  description: >-
                    Increment that is going to be applied to the usage level. **Example:** If the current value of an usage level U of the service S is 1, sending `{S: {U: 5}}` will set the usage level value of U to 6.
              example:
                zoom:
                  maxSeats: 10
                petclinic:
                  maxPets: 2
                  maxVisits: 5
      parameters:
        - $ref: '#/components/parameters/UserId'
        - name: reset
          in: query
          description: >-
            Indicates whether to reset all matching quotas to 0. Cannot be used
            with `usageLimit`. Use either `reset` or `usageLimit`, not both
          schema:
            type: boolean
            example: true
        - name: renewableOnly
          in: query
          description: >-
            Indicates whether to reset only **RENEWABLE** matching quotas to 0
            or all of them. It will only take effect when used with `reset`
          schema:
            type: boolean
            example: true
            default: true
        - name: usageLimit
          in: query
          description: >-
            Indicates the usageLimit whose tracking is being set to 0. Cannot be
            used with `reset`. Use either `reset` or `usageLimit`, not both.
            
            **IMPORTANT:** if the user with `userId` is subscribed to multiple services that share the same name to an usage limit, this endpoint will reset all of them.
          schema:
            type: string
            example: maxAssistantsPerMeeting
      responses:
        '200':
          description: Contract updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        '422':
          description: Validation error
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contracts/{userId}/userContact:
    put:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Updates the user contact information of contract
      description: >-
        Performs a novation to update some, or all, fields within the
        `userContact` of a user's contract.
      operationId: updateContractUserContactByUserId
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionUserContactNovation'
      responses:
        '200':
          description: Contract updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        '422':
          description: Validation error
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contracts/{userId}/billingPeriod:
    put:
      tags:
        - contracts
      security:
        - ApiKeyAuth: []
      summary: Updates the user billing period information from contract
      description: >-
        Performs a novation to update some, or all, fields within the
        `billingPeriod` of a user's contract.
      operationId: updateContractBillingPeriodByUserId
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionBillingNovation'
      responses:
        '200':
          description: Contract updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        '422':
          description: Validation error
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /features:
    get:
      tags:
        - features
      security:
        - ApiKeyAuth: []
      summary: Retrieves all the features of the SaaS
      description: >-
        Retrieves all features configured within the SaaS, along with their
        service and pricing version
      operationId: getFeatures
      parameters:
        - name: featureName
          in: query
          description: >-
            Name of feature to filter
          required: false
          schema:
            type: string
            example: meetings
        - name: serviceName
          in: query
          description: >-
            Name of service to filter features
          required: false
          schema:
            type: string
            example: zoom
        - name: pricingVersion
          in: query
          description: >-
            Pricing version to filter features
          required: false
          schema:
            type: string
            example: 2024
        - name: page
          in: query
          description: >-
            Page number to retrieve, starting from 1. Cannot be used with
            `offset`. Use either `page` or `offset`, not both.
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: offset
          in: query
          description: |-
            Number of items to skip before starting to collect the result set.
            Cannot be used with `page`. Use either `page` or `offset`, not both.
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: >-
            Maximum number of items to return. Useful to control pagination
            size.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 20
            default: 20
        - name: sort
          in: query
          description: Field name to sort the results by.
          required: false
          schema:
            type: string
            enum:
              - featureName
              - serviceName
            example: featureName
        - name: order
          in: query
          description: Sort direction. Use 'asc' for ascending or 'desc' for descending.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - name: show
          in: query
          description: Indicates whether to list features from active pricings only, archived ones, or both.
          required: false
          schema:
            type: string
            enum:
              - active
              - archived
              - all
            default: active
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureToToggle'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /features/{userId}:
    post:
      tags:
        - features
      security:
        - ApiKeyAuth: []
      summary: Evaluates all features within the services contracted by a user.
      description: >-
        **IMPORTANT:** This operation does not update the usage levels of the user’s subscription. Therefore, it should not be used to authorize server-side operations that may modify those levels. If you choose to use it anyway for this purpose, make sure to manually update the corresponding usage limits—although this is not the recommended approach.
      operationId: evaluateAllFeaturesByUserId
      parameters:
        - $ref: '#/components/parameters/UserId'
        - name: details
          in: query
          description: >-
            Whether to include detailed evaluation results. Check the Schema
            view of the 200 response to see both types of response
          required: false
          schema:
            type: boolean
            default: false
        - name: server
          in: query
          description: >-
            Whether to consider server expression for evaluation.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SimpleFeaturesEvaluationResult'
                  - $ref: '#/components/schemas/DetailedFeaturesEvaluationResult'
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /features/{userId}/pricing-token:
    post:
      tags:
        - features
      security:
        - ApiKeyAuth: []
      summary: Generates a pricing-token for a given user
      description: >-
        Retrieves the result of the evaluation of all the features regarding the
          contract of the user identified with userId and generates a
          Pricing-Token with such information.


        **WARNING:** In order to create the token, both the configured envs
          JWT_SECRET and JWT_EXPIRATION will be used.
        
        
        **IMPORTANT:** This operation does not update the usage levels of the user’s subscription. Therefore, it should not be used to authorize server-side operations that may modify those levels. If you choose to use it anyway for this purpose, make sure to manually update the corresponding usage limits—although this is not the recommended approach.
      operationId: evaluateAllFeaturesByUserIdAndGeneratePricingToken
      parameters:
        - $ref: '#/components/parameters/UserId'
        - name: server
          in: query
          description: >-
            Whether to consider server expression for evaluation.
          required: false
          schema:
            type: boolean
            example: false
            default: false
      responses:
        '200':
          description: >-
            Successful operation (You can go to [jwt.io](https://jwt.io) to
            check its payload)
          content:
            application/json:
              schema:
                type: object
                properties:
                  pricingToken:
                    type: string
                    example: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmZWF0dXJlcyI6eyJtZWV0aW5ncyI6eyJldmFsIjp0cnVlLCJsaW1pdCI6eyJtYXhBc3Npc3RhbnRzUGVyTWVldGluZyI6MTAwfSwidXNlZCI6eyJtYXhBc3Npc3RhbnRzUGVyTWVldGluZyI6MTB9fSwiYXV0b21hdGllZENhcHRpb25zIjp7ImV2YWwiOmZhbHNlLCJsaW1pdCI6W10sInVzZWQiOltdfX0sInN1YiI6ImowaG5EMDMiLCJleHAiOjE2ODc3MDU5NTEsInN1YnNjcmlwdGlvbkNvbnRleHQiOnsibWF4QXNzaXN0YW50c1Blck1lZXRpbmciOjEwfSwiaWF0IjoxNjg3NzA1ODY0LCJjb25maWd1cmF0aW9uQ29udGV4dCI6eyJtZWV0aW5ncyI6eyJkZXNjcmlwdGlvbiI6Ikhvc3QgYW5kIGpvaW4gcmVhbC10aW1lIHZpZGVvIG1lZXRpbmdzIHdpdGggSEQgYXVkaW8sIHNjcmVlbiBzaGFyaW5nLCBjaGF0LCBhbmQgY29sbGFib3JhdGlvbiB0b29scy4gU2NoZWR1bGUgb3Igc3RhcnQgbWVldGluZ3MgaW5zdGFudGx5LCB3aXRoIHN1cHBvcnQgZm9yIHVwIHRvIFggcGFydGljaXBhbnRzIGRlcGVuZGluZyBvbiB5b3VyIHBsYW4uIiwidmFsdWVUeXBlIjoiQk9PTEVBTiIsImRlZmF1bHRWYWx1ZSI6ZmFsc2UsInZhbHVlIjp0cnVlLCJ0eXBlIjoiRE9NQUlOIiwiZXhwcmVzc2lvbiI6ImNvbmZpZ3VyYXRpb25Db250ZXh0W21lZXRpbmdzXSAmJiBhcHBDb250ZXh0W251bWJlck9mUGFydGljaXBhbnRzXSA8IHN1YnNjcmlwdGlvbkNvbnRleHRbbWF4UGFydGljaXBhbnRzXSIsInNlcnZlckV4cHJlc3Npb24iOiJjb25maWd1cmF0aW9uQ29udGV4dFttZWV0aW5nc10gJiYgYXBwQ29udGV4dFtudW1iZXJPZlBhcnRpY2lwYW50c10gPD0gc3Vic2NyaXB0aW9uQ29udGV4dFttYXhQYXJ0aWNpcGFudHNdIiwicmVuZGVyIjoiQVVUTyJ9fX0.w3l-A1xrlBS_dd_NS8mUVdOvpqCbjxXEePxP1RqtS2k
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /features/{userId}/{featureId}:
    post:
      tags:
        - features
      security:
        - ApiKeyAuth: []
      summary: Evaluates a feature for a given user
      description: >-
        Retrieves the result of the evaluation of the feature identified by
        featureId regarding the contract of the user identified with userId
      operationId: evaluateFeatureByIdAndUserId
      parameters:
        - $ref: '#/components/parameters/UserId'
        - name: featureId
          in: path
          description: The id of the feature that is going to be evaluated
          required: true
          schema:
            type: string
            example: zoom-meetings
        - name: server
          in: query
          description: >-
            Whether to consider server expression for evaluation.
          required: false
          schema:
            type: boolean
            default: false
        - name: revert
          in: query
          description: >-
            Indicates whether to revert an optimistic usage update performed during a previous evaluation.


            **IMPORTANT:** Reversions are only effective if the original optimistic update occurred within the last 2 minutes.
          required: false
          schema:
            type: boolean
            default: false
        - name: latest
          in: query
          description: >-
            Indicates whether the revert operation must reset the usage level to the most recent cached value (true) or to the oldest available one (false). Must be used with `revert`, otherwise it will not make any effect.
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        description: >- 
          Optionally, you can provide the expected usage consumption for all relevant limits during the evaluation. This enables the optimistic mode of the evaluation engine, meaning you won’t need to notify SPACE afterward about the actual consumption from your host application — SPACE will automatically assume the provided usage was consumed.
          

          The body must be a Map whose keys are usage limits names (only those that participate in the evaluation of the feature will be considered), and values are the expected consumption for them.
          
          
          If you provide expected consumption values for only a subset of the usage limits involved in the feature evaluation — but not all — the evaluation will fail. In other words, you either provide **all** expected consumptions or **none** at all.


          **IMPORTANT:** SPACE will only update the user’s usage levels if the feature evaluation returns true.


          **WARNING:** Supplying expected usage is not required. However, when the consumption is known in advance — for example, the size of a file to be stored in cloud storage — it’s strongly recommended to include it to improve performance.
        content:
          application/json:
            schema:
              type: object
              required:
                - userContact
                - subscriptionPlans
                - subscriptionAddOns
              additionalProperties:
                type: integer
                example: 20
              example:
                storage: 50
                apiCalls: 1
                bandwidth: 20
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedFeatureEvaluationResult'
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
                example: Usage level reset successfully
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        '404':
          description: Contract not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /analytics/api-calls:
    get:
      tags:
        - analytics
      security:
        - ApiKeyAuth: []
      summary: Retrieves the daily number of API calls processed by SPACE during the last 7 days.
      description: >-
        Retrieves the daily number of API calls processed by SPACE during the last 7 days.
      operationId: getAnalyticsApiCalls
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: array
                    description: >-
                      Array of days of the week for which the data is provided.
                      The last element corresponds to the most recent day.
                    items:
                      type: string
                      format: dayOfWeek
                      description: Day of the week of the corresponding value from the `data` array.
                      example: 'Mon'
                    example: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
                  data:
                    type: array
                    description: >-
                      Array of integers representing the number of API calls
                      processed by SPACE on each day of the week. The last
                      element corresponds to the most recent day.
                    items:
                      type: integer
                      description: Number of API calls processed on that date
                      example: 1500
                    example: [1234, 6565, 2959, 6498, 11020, 1700, 190, 2950]
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /analytics/evaluations:
    get:
      tags:
        - analytics
      security:
        - ApiKeyAuth: []
      summary: Retrieves the daily number of feature evaluations processed by SPACE during the last 7 days.
      description: >-
        Retrieves the daily number of feature evaluations processed by SPACE during the last 7 days.
      operationId: getAnalyticsEvaluations
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: array
                    description: >-
                      Array of days of the week for which the data is provided.
                      The last element corresponds to the most recent day.
                    items:
                      type: string
                      format: dayOfWeek
                      description: Day of the week of the corresponding value from the `data` array.
                      example: 'Mon'
                    example: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
                  data:
                    type: array
                    description: >-
                      Array of integers representing the number of feature evaluations
                      processed by SPACE on each day of the week. The last
                      element corresponds to the most recent day.
                    items:
                      type: integer
                      description: Number of feature evaluations processed on that date
                      example: 1500
                    example: [1234, 6565, 2959, 6498, 11020, 1700, 190, 2950]
        '401':
          description: Authentication required
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          description: Username of the user
          example: jDoe
        apiKey:
          $ref: '#/components/schemas/ApiKey'
        role:
          type: string
          description: Role of the user
          enum: 
            - ADMIN
            - MANAGER
            - EVALUATOR
          example: EVALUATOR
    UserInput:
      type: object
      properties:
        username:
          type: string
          description: Username of the user
          example: jDoe
        password:
          type: string
          description: Password of the user
          example: j0hnD03
        role:
          type: string
          description: Role of the user
          enum: 
            - ADMIN
            - MANAGER
            - EVALUATOR
          default: EVALUATOR
          example: EVALUATOR
      required:
        - username
        - password
    UserUpdate:
      type: object
      properties:
        username:
          type: string
          description: Username of the user
          example: jDoe
        password:
          type: string
          description: Password of the user
          example: j0hnD03
        role:
          type: string
          description: Role of the user
          enum: 
            - ADMIN
            - MANAGER
            - EVALUATOR
          default: EVALUATOR
          example: EVALUATOR
    Service:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the service within MongoDB
          example: 68050bd09890322c57842f6f
        name:
          type: string
          description: The name of the service
          example: Zoom
        activePricings:
          type: object
          description: >-
            Map of pricing versions that are used in the service operation, i.e. there are users subscribed to it. Keys are pricing versions, and values are objects that provide information to locate the details of such versions. Such details can be located either with the "id" by which the database stores the version information, or by the "url" through which the details can be found in an external server (such as SPHERE)
          additionalProperties:
            type: object
            properties:
              id:
                type: string
                example: 682395ccb4cdf5b14afed1cd
              url:
                type: string
                format: path
                example: 'https://sphere.score.us.es/static/collections/63f74bf8eeed64058364b52e/IEEE TSC 2025/zoom/2025.yml'
        archivedPricings:
          type: object
          description: >-
            Map of pricing versions that are used in the service operation, i.e. there are users subscribed to it. Keys are pricing versions, and values are objects that provide information to locate the details of such versions. Such details can be located either with the "id" by which the database stores the version information, or by the "url" through which the details can be found in an external server (such as SPHERE)
          additionalProperties:
            type: object
            properties:
              id:
                type: string
                example: 682395ccb4cdf5b14afed1cd
              url:
                type: string
                format: path
                example: 'https://sphere.score.us.es/static/collections/63f74bf8eeed64058364b52e/IEEE TSC 2025/zoom/2025.yml'
    Pricing:
      type: object
      properties:
        version:
          type: string
          description: Indicates the version of the pricing
          example: 1.0.0
        currency:
          type: string
          description: Currency in which pricing's prices are displayed
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLE
            - SLL
            - SOS
            - SRD
            - SSP
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - UYI
            - UYU
            - UYW
            - UZS
            - VED
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
          example: USD
        createdAt:
          type: string
          format: date
          description: >-
            The date on which the pricing started its operation. It must be
            specified as a string in the ISO 8601 format (yyyy-mm-dd)
          example: '2025-04-18'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        usageLimits:
          type: array
          items:
            $ref: '#/components/schemas/UsageLimit'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        addOns:
          type: array
          items:
            $ref: '#/components/schemas/AddOn'
    Feature:
      type: object
      required:
        - name
        - valueType
        - defaultValue
        - type
      properties:
        name:
          type: string
          description: The name of the feature
          example: meetings
        description:
          type: string
          description: The description of the feature
          example: >-
            Host and join real-time video meetings with HD audio, screen
            sharing, chat, and collaboration tools. Schedule or start meetings
            instantly, with support for up to X participants depending on your
            plan.
        valueType:
          type: string
          enum:
            - BOOLEAN
            - NUMERIC
            - TEXT
          example: BOOLEAN
        defaultValue:
          oneOf:
            - type: boolean
            - type: number
            - type: string
          description: >-
            This field holds the default value of your feature. All default
            values are shared in your plan and addons. You can override your
            features values in plans.<plan_name>.features or in
            addOns.<addOn_name>.features section of your pricing.


            Supported **payment methods** are: *CARD*, *GATEWAY*, *INVOICE*,
            *ACH*, *WIRE_TRANSFER* or *OTHER*.


            Check for more information at the offial [Pricing2Yaml
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#featuresnamedefaultvalue.
          example: false
        value:
          oneOf:
            - type: boolean
            - type: number
            - type: string
          description: >-
            The actual value of the feature that is going to be used in the
            evaluation. This will be inferred during evaluations.
          example: true
        type:
          type: string
          description: >-
            Indicates the type of the features. If either `INTEGRATION`,
            `AUTOMATION` or `GUARANTEE` are selected, it's necesary to add some
            extra fields to the feature.


            For more information about other fields required if one of the above
            is selected, please refer to the [official UML iPricing
            diagram](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/understanding/iPricing).


            For more information about when to use each type, please refer to
            the [official
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#featuresnametype)
          enum:
            - INFORMATION
            - INTEGRATION
            - DOMAIN
            - AUTOMATION
            - MANAGEMENT
            - GUARANTEE
            - SUPPORT
            - PAYMENT
          example: DOMAIN
        integrationType:
          type: string
          description: >-
            Specifies the type of integration that an `INTEGRATION` feature
            offers.


            For more information about when to use each integrationType, please
            refer to the [official
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#featuresnameintegrationtype).
          enum:
            - API
            - EXTENSION
            - IDENTITY_PROVIDER
            - WEB_SAAS
            - MARKETPLACE
            - EXTERNAL_DEVICE
        pricingUrls:
          type: array
          description: >-
            If feature `type` is *INTEGRATION* and `integrationType` is
            *WEB_SAAS* this field is **required**.


            Specifies a list of URLs linking to the associated pricing page of
            third party integrations that you offer in your pricing.
          items:
            type: string
        automationType:
          type: string
          description: >-
            Specifies the type of automation that an `AUTOMATION` feature
            offers.


            For more information about when to use each automationType, please
            refer to the [official
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#featuresnameautomationtype).
          enum:
            - BOT
            - FILTERING
            - TRACKING
            - TASK_AUTOMATION
        paymentType:
          type: string
          description: Specifies the type of payment allowed by a `PAYMENT` feature.
          enum:
            - CARD
            - GATEWAY
            - INVOICE
            - ACH
            - WIRE_TRANSFER
            - OTHER
        docUrl:
          type: string
          description: |-
            If feature `type` is *GUARANTEE* this is **required**,

            URL redirecting to the guarantee or compliance documentation.
        expression:
          type: string
          description: >-
            The expression that is going to be evaluated in order to determine
            wheter a feature is active for the user performing the request or
            not. By default, this expression will be used to resolve evaluations
            unless `serverExpression` is defined.
          example: >-
            configurationContext[meetings] && appContext[numberOfParticipants]
            <= subscriptionContext[maxParticipants]
        serverExpression:
          type: string
          description: >-
            Configure a different expression to be evaluated only on the server
            side.
        render:
          type: string
          description: >-
            Choose the behaviour when displaying the feature of the pricing. Use
            this feature in the [Pricing2Yaml
            editor](https://sphere.score.us.es/editor).
          enum:
            - AUTO
            - DISABLED
            - ENABLED
    UsageLimit:
      type: object
      required:
        - name
        - valueType
        - defaultValue
        - type
      properties:
        name:
          type: string
          description: The name of the usage limit
          example: maxParticipantsPerMeeting
        description:
          type: string
          description: The description of the usage limit
          example: >-
            Defines the maximum number of participants allowed in a single
            meeting session.
        valueType:
          type: string
          enum:
            - BOOLEAN
            - NUMERIC
          example: NUMERIC
        defaultValue:
          oneOf:
            - type: boolean
            - type: number
          description: >-
            This field holds the default value of your usage limit. All default
            values are shared in your plan and addons. You can override your
            usage limits values in plans.<plan_name>.usageLimits or in
            addOns.<addOn_name>.usageLimits section of your pricing.


            Check for more information at the offial [Pricing2Yaml
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#usagelimitsnamedefaultvalue).
          example: 30
        value:
          oneOf:
            - type: boolean
            - type: number
            - type: string
          description: >-
            The actual value of the usage limit that is going to be used in the
            evaluation. This will be inferred during evaluations regaring the
            user's subscription.
          example: 100
        type:
          type: string
          description: >-
            Indicates the type of the usage limit.


            - If set to RENEWABLE, the usage limit will be tracked by
            subscriptions by default.

            - If set to NON_RENEWABLE, the usage limit will only be tracked if
            `trackable` == true


            For more information about when to use each type, please refer to
            the [official
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#usagelimitsnametype)
          enum:
            - RENEWABLE
            - NON_RENEWABLE
          example: RENEWABLE
        trackable:
          type: boolean
          description: >-
            Determines wether an usage limit must be tracked within the
            subscription state or not.


            If the `type` is set to *NON_RENEWABLE*, this field is **required**.
          default: false
        period:
          $ref: '#/components/schemas/Period'
    Plan:
      type: object
      required:
        - name
        - price
        - features
      properties:
        name:
          type: string
          description: The name of the plan
          example: BASIC
        description:
          type: string
          description: The description of the plan
          example: >-
            The BASIC plan offers unlimited 1-on-1 meetings and group meetings
            up to 40 minutes with up to 100 participants. Ideal for individuals
            or small teams getting started with Zoom.
        price:
          type: number
          description: The price of the plan
          example: 5
        private:
          type: boolean
          description: Determines wether the plan can be contracted by anyone or not
          example: false
          default: false
        features:
          type: object
          description: >-
            A map containing the values of features whose default value must be
            replaced. Keys are feature names and values will replace feture's
            default value.
          additionalProperties:
            oneOf:
              - type: boolean
                example: true
              - type: string
                example: ALLOWED
            description: >-
              The value that will be considered in evaluations for users that
              subscribe to the plan.
        usageLimits:
          type: object
          description: >-
            A map containing the values of usage limits that must be replaced.
            Keys are usage limit names and values will replace usage limit's
            default value.
          additionalProperties:
            oneOf:
              - type: boolean
                example: true
              - type: number
                example: 1000
            description: >-
              The value that will be considered in evaluations for users that
              subscribe to the plan.
    AddOn:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
          description: The name of the add-on
          example: hugeMeetings
        description:
          type: string
          description: The description of the add-on
          example: >-
            Extends meeting capacity beyond standard limits, allowing you to
            host large sessions with up to 1000 participants, depending on your
            subscription. Ideal for webinars, conferences, and large-scale
            virtual events.
        private:
          type: boolean
          description: Determines wether the add-on can be contracted by anyone or not
          example: false
          default: false
        price:
          type: number
          description: The price of the add-on
          example: 15
        availableFor:
          type: array
          description: >-
            Indicates that your add-on is available to purchase only if the user
            is subscribed to any of the plans indicated in this list. If the
            field is not provided, the add-on will be available for all plans.


            For more information, please refer to the [Pricing2Yaml
            documentation](https://pricing4saas-docs.vercel.app/docs/2.0.1/api/Pricing2Yaml/pricing2yaml-v30-specification#addonsnameavailablefor)
          items:
            type: string
          example:
            - BASIC
            - PRO
        dependsOn:
          type: array
          description: >-
            A list of add-on to which the user must be subscribed in order to
            purchase the current addon.


            For example: Imagine that an addon A depends on add-on B. This means
            that in order to include in your subscription the add-on A you also
            have to include the add-on B.


            Therefore, you can subscribe to B or to A and B; but not exclusively
            to A.
          items:
            type: string
          example:
            - phoneDialing
        excludes:
          type: array
          description: >-
            A list of add-on to which the user cannot be subscribed in order to
            purchase the current addon.


            For example: Imagine that an addon A excludes on add-on B. This
            means that in order to include A in a subscription, B cannot be
            contracted.


            Therefore, you can subscribe to either A or be B; but not to both.
          items:
            type: string
          example:
            - phoneDialing
        features:
          type: object
          description: >-
            A map containing the values of features that must be replaced. Keys
            are feature names and values will replace those defined by plans.
          additionalProperties:
            oneOf:
              - type: boolean
                example: true
              - type: string
                example: ALLOWED
            description: >-
              The value that will be considered in evaluations for users that
              subscribe to the add-on.
        usageLimits:
          type: object
          description: >-
            A map containing the values of usage limits that must be replaced.
            Keys are usage limits names and values will replace those defined by
            plans
          additionalProperties:
            oneOf:
              - type: boolean
                example: true
              - type: number
                example: 1000
            description: >-
              The value that will be considered in evaluations for users that
              subscribe to the add-on.
        usageLimitsExtensions:
          type: object
          description: >-
            A map containing the values of usage limits that must be extended.
            Keys are usageLimits names and values will extend those defined by
            plans.
          additionalProperties:
            type: number
            description: >-
              The value that will be added to the 'base' of the subscription in
              order to increase the limit considered in evaluations. For
              example: if usage limit A's base value is 10, and an add-on
              extends it by 10, then evaluations will consider 20 as the value
              of the usage limit'
            example: 1000
        subscriptionContraint:
          type: object
          description: >-
            Defines some restrictions that must be taken into consideration
            before creating a subscription.
          properties:
            minQuantity:
              type: integer
              description: >-
                Indicates the minimum amount of times that an add-on must be
                contracted in order to be included within a subscription.
              example: 1
              default: 1
            maxQuantity:
              type: integer
              description: >-
                Indicates the maximum amount of times that an add-on must be
                contracted in order to be included within a subscription.
              example: null
              default: null
            quantityStep:
              type: integer
              description: >-
                Specifies the required purchase block size for this add-on. The
                `amount` included within the subscription for this add-on must
                be a multiple of this value.
              example: 1
              default: 1
    Period:
      type: object
      description: >-
        Defines a period of time after which either a *RENEWABLE* usage limit or
        a subscription billing must be reset.
      properties:
        value:
          type: integer
          description: The amount of time that defines the period.
          example: 1
          default: 1
        unit:
          type: string
          description: The unit of time to be considered when defining the period
          enum:
            - SEC
            - MIN
            - HOUR
            - DAY
            - MONTH
            - YEAR
          example: MONTH
          default: MONTH
    Subscription:
      type: object
      description: >-
        Defines an iSubscription, which is a computational representation of the
        actual state and history of a subscription contracted by an user.
      required:
        - billingPeriod
        - usageLevel
        - contractedServices
        - subscriptionPlans
        - hystory
      properties:
        userContact:
          $ref: '#/components/schemas/UserContact'
        billingPeriod:
          $ref: '#/components/schemas/BillingPeriod'
        usageLevel:
          type: object
          description: >-
            Map that contains information about the current usage levels of the trackable usage limits of the contracted services. These usage limits are:


            - All **RENEWABLE** usage limits.

            - **NON_RENEWABLE** usage limits with `trackable` == true


            Keys are service names and values are Maps containing the usage levels of each service.
          additionalProperties:
            type: object
            description:  >-
              Map that contains information about the current usage levels of the usage limits that must be tracked.

              Keys are usage limit names and values contain the current state ofeach usage level and their expected resetTimestamp (if usage limit type is RENEWABLE)
            additionalProperties:
              type: object
              required:
                - consumed
              properties:
                resetTimestamp:
                  type: string
                  format: date
                  description: >-
                    The date on which the current consumption of the usage limit
                    is expected to be reset, i.e. set to 0. 
  
  
                    If the usage limit is **NON_RENEWABLE**, this field must not
                    be set.
  
  
                    It must be specified as a string in the ISO 8601 format
                    (yyyy-mm-dd).
                consumed:
                  type: number
                  description: >-
                    Indicates how much quota has been consumed for this usage
                    limit
                  example: 5
          example:
            zoom:
              maxSeats: 
                consumed: 10
            petclinic:
              maxPets: 
                consumed: 2
              maxVisits: 
                consumed: 5
                resetTimeStamp: "2025-07-31"
        contractedServices:
          $ref: '#/components/schemas/ContractedService'
        subscriptionPlans:
          $ref: '#/components/schemas/SubscriptionPlans'
        subscriptionAddOns:
          $ref: '#/components/schemas/SubscriptionAddons'
        history:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionSnapshot'
    BillingPeriod:
      type: object
      required:
        - startDate
        - endDate
      properties:
        startDate:
          type: string
          format: date
          description: >-
            The date on which the current billing period started. It must be
            specified as a string in the ISO 8601 format (yyyy-mm-dd)
          example: '2025-04-18'
        endDate:
          type: string
          format: date
          description: >-
            The date on which the current billing period is expected to end or
            to be renewed. It must be specified as a string in the ISO 8601
            format (yyyy-mm-dd)
          example: '2025-12-31'
        autoRenew:
          type: boolean
          description: >-
            Determines whether the current billing period will be extended
            `renewalDays` days once it ends (true), or if the subcription will
            be cancelled by that point (false).
          example: true
          default: true
        renewalDays:
          type: integer
          description: >-
            If `autoRenew` == true, this field is **required**.



            It represents the number of days by which the current billing period
            will be extended once it reaches its `endDate`. When this extension
            operation is performed, the endDate is replaced by `endDate` +
            `renewalDays`.
          example: 365
          default: 30
    ContractedService:
      type: object
      description: >-
        Map where the keys are names of services that must match with the value
        of the `saasName` field within the serialized pricing indicated in their
        `path`
      additionalProperties:
        type: string
        format: path
        description: >-
          Specifies the version of the service's pricing to which the user is subscribed.


          **WARNING:** The selected pricing must be marked as **active**
          within the service.
      example:
        zoom: "2025"
        petclinic: "2024"
    UserContact:
      type: object
      required:
        - userId
        - username
      properties:
        userId:
          type: string
          example: 68062d8a7274336e191fdabb
        fistName:
          type: string
          description: The first name of the user
          example: John
        lastName:
          type: string
          description: The last name of the user
          example: Doe
        email:
          type: string
          description: The email of the user
          example: john.doe@my-domain.com
        username:
          type: string
          description: The username of the user
          example: j0hnD03
        phone:
          type: string
          description: The phone number of the user, with international code
          example: +34 666 666 666
    SubscriptionPlans:
      type: object
      description: >-
        Map where the keys are names of contractedService whose plan is going to
        be included within the subscription.
      additionalProperties:
        type: string
        description: >-
          The plan selected to be included within the subscription from the
          pricing of the service indicated in `contractedService`
      example:
        zoom: ENTERPRISE
        petclinic: GOLD
    SubscriptionAddons:
      type: object
      description: >-
        Map where the keys are names of contractedService whose add-ons are
        going to be included within the subscription.
      additionalProperties:
        type: object
        description: >-
          Map where keys are the names of the add-ons selected to be included
          within the subscription from the pricing of the service indicated in
          `contractedService` and values determine how many times they have been
          contracted. They must be consistent with the **availability,
          dependencies, exclusions and subscription contstraints** established
          in the pricing.
        additionalProperties:
          type: integer
          description: >-
            Indicates how many times has the add-on been contracted within the
            subscription. This number must be within the range defined by the
            `subscriptionContraint` of the add-on
          example: 1
      example:
        zoom:
          extraSeats: 2
          hugeMeetings: 1
        petclinic:
          petsAdoptionCentre: 1
    SubscriptionSnapshot:
      type: object
      properties:
        startDate:
          type: string
          format: date
          description: >-
            The date on which the user started using the subscription snapshot.
            It must be specified as a string in the ISO 8601 format (yyyy-mm-dd)
          example: '2024-04-18'
        endDate:
          type: string
          format: date
          description: >-
            The date on which the user finished using the subscription snapshot,
            either because the contract suffered a novation, i.e. the
            subscription plan/add-ons or the pricing version to which the
            contract is referred changed; or the user cancelled his subcription.


            It must be specified as a string in the ISO 8601 format
            (yyyy-mm-dd).
          example: '2024-04-17'
        contractedServices:
          $ref: '#/components/schemas/ContractedService'
        subscriptionPlans:
          $ref: '#/components/schemas/SubscriptionPlans'
        subscriptionAddOns:
          $ref: '#/components/schemas/SubscriptionAddons'
    FeatureToToggle:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/Feature'
        service:
          type: string
          description: The name of the service which includes the feature
          example: Zoom
        pricingVersion:
          type: string
          description: The version of the service's pricing where you can find the feature
          example: 2.0.0
    DetailedFeatureEvaluationResult:
      type: object
      properties:
        used:
          type: object
          description: >-
            Map whose keys indicate the name of all usage limits tracked by the
            subscription that have participated in the evaluation of the
            feature, and their values indicates the current quota consumption of
            the user for each one.
          additionalProperties:
            type: number
            description: >-
              Value indicating the quota consumed of this usage limit by the
              user
            example: 10
          example:
            storage: 50
            apiCalls: 1
            bandwidth: 20
        limit:
          type: object
          description: >-
            Map whose keys indicate the name of all usage limits tracked by the
            subscription that have participated in the evaluation of the
            feature, and their values indicates the current quota limit of the
            user for each one.
          additionalProperties:
            type: number
            description: >-
              Value indicating the quota limit of this usage limit regarding the
              user contract
            example: 100
          example:
            storage: 500
            apiCalls: 1000
            bandwidth: 200
        eval:
          type: boolean
          description: >-
            Result indicating whether the feature with the given featureId is
            active (true) or not (false) for the given user
        error:
          type: object
          description: test
          properties:
            code:
              type: string
              description: Code to identify the error
              enum: 
                - EVALUATION_ERROR
                - FLAG_NOT_FOUND
                - GENERAL
                - INVALID_EXPECTED_CONSUMPTION
                - PARSE_ERROR
                - TYPE_MISMATCH
              example: FLAG_NOT_FOUND
            message:
              type: string
              description: Message of the error
    SimpleFeaturesEvaluationResult:
      type: object
      description: >-
        Map whose keys indicate the name of all features that have been
        evaluated and its values indicates the result of such evaluation.
      additionalProperties:
        type: boolean
        description: >-
          Result indicating whether the feature with the given featureId is
          active (true) or not (false) for the given user
        example: true
      example:
        meetings: true
        automatedCaptions: true
        phoneDialing: false
    DetailedFeaturesEvaluationResult:
      type: object
      description: >-
        Map whose keys indicate the name of all features that have been
        evaluated and its values indicates the detailed result of such
        evaluation.
      additionalProperties:
        type: object
        properties:
          used:
            type: object
            description: >-
              Map whose keys indicate the name of all usage limits tracked by
              the subscription that have participated in the evaluation of the
              feature, and their values indicates the current quota consumption
              of the user for each one.
            additionalProperties:
              type: number
              description: >-
                Value indicating the quota consumed of this usage limit by the
                user
              example: 10
            example:
              storage: 5
              apiCalls: 13
              bandwidth: 2
          limit:
            type: object
            description: >-
              Map whose keys indicate the name of all usage limits tracked by
              the subscription that have participated in the evaluation of the
              feature, and their values indicates the current quota limit of the
              user for each one.
            additionalProperties:
              type: number
              description: >-
                Value indicating the quota limit of this usage limit regarding
                the user contract
              example: 100
            example:
              storage: 500
              apiCalls: 100
              bandwidth: 300
          eval:
            type: boolean
            description: >-
              Result indicating whether the feature with the given featureId is
              active (true) or not (false) for the given user
            example: true
          error:
            type: object
            description: test
            properties:
              code:
                type: string
                description: Code to identify the error
                enum: 
                  - EVALUATION_ERROR
                  - FLAG_NOT_FOUND
                  - GENERAL
                  - INVALID_EXPECTED_CONSUMPTION
                  - PARSE_ERROR
                  - TYPE_MISMATCH
                example: FLAG_NOT_FOUND
              message:
                type: string
                description: Message of the error
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
    FieldValidationError:
      type: object
      properties:
        type:
          type: string
          example: field
        msg:
          type: string
          example: Password must be a string
        path:
          type: string
          example: password
        location:
          type: string
          example: body
        value:
          example: 1
      required:
        - type
        - msg
        - path
        - location
    ApiKey:
      type: string
      description: Random 32 byte string encoded in hexadecimal
      example: 0051e657dd30bc3a07583c20dcadc627211624ae8bf39acf05f08a3fdf2b434c
      pattern: '^[a-f0-9]{64}$'
      readOnly: true
  requestBodies:
    SubscriptionCompositionNovation:
      description: >-
        Novates the composition of an existent contract, triggering a state
        update
      content:
        application/json:
          schema:
            type: object
            required:
              - subscriptionPlans
              - subscriptionAddOns
            properties:
              contractedServices:
                $ref: '#/components/schemas/ContractedService'
              subscriptionPlans:
                $ref: '#/components/schemas/SubscriptionPlans'
              subscriptionAddOns:
                $ref: '#/components/schemas/SubscriptionAddons'
    SubscriptionCreation:
      description: Creates a new subscription within Pricing4SaaS
      content:
        application/json:
          schema:
            type: object
            required:
              - userContact
              - subscriptionPlans
              - subscriptionAddOns
            properties:
              userContact:
                $ref: '#/components/schemas/UserContact'
              billingPeriod:
                type: object
                properties:
                  autoRenew:
                    type: boolean
                    description: >-
                      Determines whether the current billing period will be
                      extended `renewalDays` days once it ends (true), or if the
                      subcription will be cancelled by that point (false).
                    example: true
                    default: true
                  renewalDays:
                    type: integer
                    description: >-
                      If `autoRenew` == true, this field is **required**.



                      It represents the number of days by which the current
                      billing period will be extended once it reaches its
                      `endDate`. When this extension operation is performed, the
                      endDate is replaced by `endDate` + `renewalDays`.
                    example: 365
                    default: 30
              contractedServices:
                $ref: '#/components/schemas/ContractedService'
              subscriptionPlans:
                $ref: '#/components/schemas/SubscriptionPlans'
              subscriptionAddOns:
                $ref: '#/components/schemas/SubscriptionAddons'
      required: true
    SubscriptionUserContactNovation:
      description: |-
        Updates the contact information of a user from his contract

        **IMPORTANT:** **userId** not needed in the request body
      content:
        application/json:
          schema:
            type: object
            properties:
              fistName:
                type: string
                description: The first name of the user
                example: John
              lastName:
                type: string
                description: The last name of the user
                example: Doe
              email:
                type: string
                description: The email of the user
                example: john.doe@my-domain.com
              username:
                type: string
                description: The username of the user
                example: j0hnD03
              phone:
                type: string
                description: The phone number of the user, with international code
                example: +34 666 666 666
      required: true
    SubscriptionBillingNovation:
      description: >-
        Updates the billing information from a contract. 


        **IMPORTANT:** It is not needed to provide all the fields within the
        request body. Only fields sent will be replaced.
      content:
        application/json:
          schema:
            type: object
            properties:
              endDate:
                type: string
                format: date
                description: >-
                  The date on which the current billing period is expected to end or
                  to be renewed. It must be specified as a string in the ISO 8601
                  format (yyyy-mm-dd)
                example: '2025-12-31'
              autoRenew:
                type: boolean
                description: >-
                  Determines whether the current billing period will be extended
                  `renewalDays` days once it ends (true), or if the subcription will
                  be cancelled by that point (false).
                example: true
                default: true
              renewalDays:
                type: integer
                description: >-
                  If `autoRenew` == true, this field is **required**.
      
      
      
                  It represents the number of days by which the current billing period
                  will be extended once it reaches its `endDate`. When this extension
                  operation is performed, the endDate is replaced by `endDate` +
                  `renewalDays`.
                example: 365
                default: 30
      required: true
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  parameters:
    Username:
      name: username
      in: path
      required: true
      schema:
        type: string
        description: Username of the user
        example: johndoe
    ServiceName:
      name: serviceName
      in: path
      description: Name of service to return
      required: true
      schema:
        type: string
        example: Zoom
    PricingVersion:
      name: pricingVersion
      in: path
      description: Pricing version that is going to be updated
      required: true
      schema:
        type: string
        example: 1.0.0
    UserId:
      name: userId
      in: path
      description: The id of the user for locating the contract
      required: true
      schema:
        type: string
        example: 680542cf34781df198b9a1aa